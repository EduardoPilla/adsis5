Comandos utilizados:

docker login
docker pull ubuntu:18.04 -> fez o download da imagem docker do ubuntu 18.04 para host
docker run -d -ti --name ubuntu1804 -h pilla ubuntu:18.04 -> criou o container chamado 
ubuntu1804 com base no ubuntu 18.04
docker ps -> verifica quais containers estão em execução;
docker ps –a -> verifica quais containers já foram executanos na máquina
docker stop containerName-> parar um container
dokcer start containerName -> inicia um container
docker rm containerName -> remove um container parado
docker images -> lista todas as imagens contidas no host
docker rmi -> remove a imagem do host
docker exec -ti ubuntu1804 /bin/bash -> acessa o bash do container 
docker stats -> mostra os recursos que os containers estão consumindo do host
docker inspect -> mostra os detalhes de configuração de um container, utilizamos o 
| less para pausar a tela
docker logs -> apresenta a saída de log de um container, utilizamos o "-f" para 
manter os logs sendo atualizados na tela

##Cria o container docker para o SGDB postgres
sudo docker run -d --name postgres -h pgsql -p 5432:5432 -e POSTGRES_PASSWORD=senha postgres

##Cria o container docker para o PGadmin 
sudo docker run -d --name pgadmin -h admin -p 8080:80 -e PGADMIN_DEFAULT_EMAIL=admin@admin.com -e PGADMIN_DEFAULT_PASSWORD=senha dpage/pgadmin4

###Cria o volume aula0806_1, neste caso o volume será criado na pasta padrão do docker que é /var/lib/docker/volumes, mas eu poderia especificar o caminho para o volume
docker volume create aula0806_1

##Para verificar se o volume foi criado
docker volume ls

##Para excluir um volume
docker volume rm aula0806_1


## Criando o container do POSTGRES utilizando o volume criado
sudo docker run -d --name postgres -h pgsql -p 5432:5432 -e POSTGRES_PASSWORD=senha  -v aula0806_1:/var/lib/postgresql/data postgres

##Criando o container do jenkins
docker volume create jenkins_vol
docker run -d --name jenkins -h jenkins -p 8081:8080 -p 50000:50000 -v jenkins_vol:/var/jenkins_home jenkins/jenkins


